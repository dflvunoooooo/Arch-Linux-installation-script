#!/bin/bash
# This script can be run by executing the following:
#   curl -sL https://git.io/JfLYQ | bash
# and should be run as user

set -uo pipefail
trap 's=$?; printf "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

block=$(dialog --stdout --inputbox "Wo soll Arch installiert werden (ohne Pfad)?" 0 0) || exit 1
clear
: ${block:?"You have to answer!"}

modell=$(dialog --stdout --inputbox "Welches Raspberry Pi Modell (nur Nummer)?" 0 0) || exit 1
clear
: ${modell:?"You have to answer!"}

version=$(dialog --stdout --inputbox "Soll Raspberry Pi latest (anworte: normal) oder Aarch64 (antworte: aarch64) installiert werden)?" 0 0) || exit 1
clear
: ${version:?"You have to answer!"}

if [ $modell == zero ]
then 
    wlan=$(dialog --stdout --inputbox "Soll WLAN eingerichtet werden?" 0 0) || exit 1
    clear
    : ${wlan:?"You have to answer with yes or no."}
fi
if [ $wlan == zero ]
then 
    ssid=$(dialog --stdout --inputbox "Wie lautet die SSID?" 0 0) || exit 1
    clear
    : ${ssid:?"You have to answer with yes or no."}
    passwort=$(dialog --stdout --inputbox "Wie lautet das Passwort?" 0 0) || exit 1
    clear
    : ${passwort:?"You have to answer with yes or no."}
fi

pfad="/dev/$block"
if [[ "$block" == sd* ]]; then
    pfad1="${pfad}1"
    pfad2="${pfad}2"
else
    pfad1="${pfad}p1"
    pfad2="${pfad}p2"
fi

mountroot="/mnt/arch/root"
mountboot="/mnt/arch/boot"

sudo parted $pfad --script -- mklabel msdos
sudo parted $pfad --script -- mkpart primary fat32 1 512
sudo parted $pfad --script -- mkpart primary ext4 512 100%
sudo parted $pfad --script -- set 1 boot on
sudo parted $pfad --script print

sudo mkfs.vfat -F32 $pfad1
sudo mkfs.ext4 -F $pfad2

sudo mkdir -p /mnt/arch/{boot,root}

sudo mount $pfad1 $mountboot
sudo mount $pfad2 $mountroot

if [ "$modell" = 2 ] || [ "$modell" = 3 ]; 
    then
    if [ "$version" = normal ]; 
        then
        FILE=ArchLinuxARM-rpi-2-latest.tar.gz
        if ! test -f "$FILE"; then
            sudo wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-2-latest.tar.gz
        fi
        sudo tar -xf ArchLinuxARM-rpi-2-latest.tar.gz -C $mountroot
    fi
fi

if [ "$modell" = 4 ]; 
    then
    if [ "$version" = normal ]; 
        then
        FILE=ArchLinuxARM-rpi-4-latest.tar.gz
        if ! test -f "$FILE"; then
            sudo wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-4-latest.tar.gz
        fi
        sudo tar -xf ArchLinuxARM-rpi-4-latest.tar.gz -C $mountroot
    fi
fi

if [ "$version" = aarch64 ];
    then
    FILE=ArchLinuxARM-rpi-aarch64-latest.tar.gz
    if ! test -f "$FILE"; then
        sudo wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-aarch64-latest.tar.gz
    fi
    sudo tar -xf ArchLinuxARM-rpi-aarch64-latest.tar.gz -C $mountroot
    sudo sed -i 's/mmcblk0/mmcblk1/g' $mountroot/etc/fstab
fi

#### WLAN einrichten
if [ "$wlan" = yes ];
then
    printf "[Match]\nName=wlan0\n\n[Network]\nDHCP=yes" > $mountroot/etc/systemd/network/wlan0.network
    printf "country=AT\nctrl_interface=DIR=/run/wpa_supplicant\nctrl_interface_group=wheel\nupdate_config=1" > $mountroot/etc/wpa_supplicant/wpa_supplicant-wlan0.conf
    wpa_passphrase "${ssid}" "${passwort}" > $mountroot/etc/wpa_supplicant/wpa_supplicant-wlan0.conf
    ln -s /usr/lib/systemd/system/wpa_supplicant@.service $mountroot/etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service
fi

sudo mv /mnt/arch/root/boot/* /mnt/arch/boot
sync
sudo umount /mnt/arch/boot /mnt/arch/root
sudo rm -r /mnt/arch
printf "\n#################\n### Ready :) ###\n#################\n" 
